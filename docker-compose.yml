services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - DB_NAME=truck_savdodb
      - DB_USER=postgres
      - DB_PASSWORD=qwerty12345  # Xavfsiz parol o'rnating
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    depends_on:
      - db
      - redis
    networks:
      - app_network
    command: gunicorn --bind 0.0.0.0:8002 config.wsgi:application

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=truck_savdodb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}  # Xavfsiz parol o'rnating
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:6
    networks:
      - app_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker -l info
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - DB_NAME=truck_savdodb
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - app
      - redis
      - db
    networks:
      - app_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs  # SSL sertifikatlari uchun
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - app
    networks:
      - app_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge